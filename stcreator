#!/usr/bin/env python
# -*- coding: utf-8 -*-

import getopt, sys
import os
import os.path
import shutil

indextmpl = """
[Sound Theme]
Name=name
Directories=stereo

[stereo]
OutputProfile=stereo
"""


def create(name, target, sounds):
    global indextmpl

    os.chdir(os.path.abspath(target))

    try:
        if os.path.exists(name):
            print >> sys.stderr, 'The same name directory already exists.'
            sys.exit(1)
        os.mkdir(name)
        os.chdir(name)

        spec = indextmpl.replace("name", name)

        index = open('index.theme', 'w')
        index.write(spec)
        index.close()

        os.mkdir('stereo')

        os.chdir('../')

        for spec, sound in sounds:

            print sound, 'to', spec

            target = os.path.abspath(sound)
            extension = sound.split('.')[-1]
            dist = os.path.abspath('./'+name+'/stereo/'+spec+'.'+extension)

            shutil.copy(target, dist)

    except OSError, e:
        print >> sys.stderr, 'It\'s not permitted to write to the target.'
        sys.exit(1)
    except IOError, e:
        print >> sys.stderr, 'An error occurred while processing: ', e.args[1]
        sys.exit(1)

def usage():
    print """Usage: stcreator --name NAME --target DISTINATION [SHORTCUT OGG/WAVFILE]... [SPEC OGG/WAVFILE]...

Shortcuts:
--login         Login Sound
--logout        Logout Sound
--error         Error Dialog Sound
--warning       Warning Dialog Sound
--information   Information Dialog Sound
--guestion      Guestion Dialog Sound
--sysready      System Ready Sound(GDM Startup)

See: http://0pointer.de/public/sound-naming-spec.html"""

def main():

    shortopt = "h"
    longopt = ["help", "name=", "target=", "login=", "logout=", "question=", "error=", "warning=", "information=", "sysready=",
            "desktop-login=", "desktop-logout=", "dialog-question=", "dialog-error=", "dialog-warning=", "dialog-information=", "system-ready="]

    try:
        opts, args = getopt.getopt(sys.argv[1:], shortopt, longopts=longopt)
    except getopt.GetoptError:
        usage()
        sys.exit(2)

    name = None
    target = None

    sounds = []

    for o, a in opts:
        if o in ("-h", "--help"):
            usage()
            sys.exit()
        if o == "--name":
            name = a
        if o == "--target":
            target = a
        if o == "--login":
            sounds.append(('desktop-login', a))
        if o == "--logout":
            sounds.append(('desktop-logout', a))
        if o == "--error":
            sounds.append(('dialog-error', a))
        if o == "--warning":
            sounds.append(('dialog-warning', a))
        if o == "--information":
            sounds.append(('dialog-information', a))
        if o == "--question":
            sounds.append(('dialog-question', a))
        if o == "--sysready":
            sounds.append(('system-ready', a))

    if name is None or target is None:
        usage()
        sys.exit(2)

    if args and len(args) % 2:
        usage()
        sys.exit(2)

    while args:
        sort = args.pop(0)
        location = args.pop(0)

        if sort in [x[0] for x in sounds]:
            continue

        sounds.append((sort, location))

    create(name, target, sounds)

if __name__ == "__main__":
    main()

